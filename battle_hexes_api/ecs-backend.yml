AWSTemplateFormatVersion: '2010-09-09'
Description: Fargate deployment for battle-hexes-api

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
  EcrImage:
    Type: String
    Description: Full image URI
  AcmCertificateArn:
    Type: String
    Description: ACM cert ARN covering your API hostname (same region as ALB)
  HostedZoneId:
    Type: String
    Description: Public hosted zone ID for battlehexes.com
  ApiDomainName:
    Type: String
    Default: api-dev.battlehexes.com
    Description: Public DNS name for this environment

Resources:

  BattleHexesCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: battle-hexes-dev-cluster

  ClusterCapacityProviders:
    Type: AWS::ECS::ClusterCapacityProviderAssociations
    Properties:
      Cluster: !Ref BattleHexesCluster
      CapacityProviders:
        - FARGATE
        - FARGATE_SPOT
      DefaultCapacityProviderStrategy:
        - CapacityProvider: FARGATE_SPOT
          Base: 1
          Weight: 1
        - CapacityProvider: FARGATE
          Weight: 1

  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: battle-hexes-execution-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP to ALB
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

  BattleHexesSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP from ALB to ECS
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8000
          ToPort: 8000
          SourceSecurityGroupId: !Ref LoadBalancerSecurityGroup

  BattleHexesLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: battle-hexes-alb
      Scheme: internet-facing
      Type: application
      Subnets: !Ref SubnetIds
      SecurityGroups:
        - !Ref LoadBalancerSecurityGroup

  BattleTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      TargetType: ip
      Port: 8000
      Protocol: HTTP
      VpcId: !Ref VpcId
      HealthCheckPath: /health
      HealthCheckProtocol: HTTP
      HealthCheckIntervalSeconds: 15
      HealthyThresholdCount: 2
      Matcher:
        HttpCode: 200-399

  BattleHexesHttpListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref BattleHexesLoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: redirect
          RedirectConfig:
            Protocol: HTTPS
            Port: '443'
            StatusCode: HTTP_301

  BattleHexesHttpsListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref BattleHexesLoadBalancer
      Port: 443
      Protocol: HTTPS
      SslPolicy: ELBSecurityPolicy-TLS13-1-2-2021-06
      Certificates:
        - CertificateArn: !Ref AcmCertificateArn
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref BattleTargetGroup

  BattleHexesTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: battle-hexes-api-task
      RequiresCompatibilities: [FARGATE]
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      ExecutionRoleArn: !GetAtt TaskExecutionRole.Arn
      RuntimePlatform:
        CpuArchitecture: ARM64
        OperatingSystemFamily: LINUX
      ContainerDefinitions:
        - Name: battle-hexes-api
          Image: !Ref EcrImage
          PortMappings:
            - ContainerPort: 8000

  BattleHexesService:
    Type: AWS::ECS::Service
    DependsOn:
      - BattleHexesHttpsListener
      - ClusterCapacityProviders
    Properties:
      Cluster: !Ref BattleHexesCluster
      ServiceName: !Sub "battle-hexes-api-${AWS::StackName}"
      DesiredCount: 1
      CapacityProviderStrategy:
        - CapacityProvider: FARGATE_SPOT
          Weight: 2
        - CapacityProvider: FARGATE
          Weight: 1
      EnableExecuteCommand: true
      EnableECSManagedTags: true
      PropagateTags: SERVICE
      DeploymentConfiguration:
        DeploymentCircuitBreaker:
          Enable: true
          Rollback: true
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      HealthCheckGracePeriodSeconds: 60
      LoadBalancers:
        - ContainerName: battle-hexes-api
          ContainerPort: 8000
          TargetGroupArn: !Ref BattleTargetGroup
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets: !Ref SubnetIds
          SecurityGroups:
            - !Ref BattleHexesSecurityGroup
      TaskDefinition: !Ref BattleHexesTaskDefinition

  BattleHexesServiceAutoScalingTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    DependsOn: BattleHexesService
    Properties:
      MinCapacity: 0
      MaxCapacity: 2
      ResourceId: !Sub "service/${BattleHexesCluster}/${BattleHexesService}"
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs

  ApiAliasRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref ApiDomainName
      Type: A
      AliasTarget:
        DNSName: !GetAtt BattleHexesLoadBalancer.DNSName
        HostedZoneId: !GetAtt BattleHexesLoadBalancer.CanonicalHostedZoneID
        EvaluateTargetHealth: false

Outputs:
  PublicClusterName:
    Description: ECS Cluster name
    Value: !Ref BattleHexesCluster
  AlbDNSName:
    Description: Public DNS for the ALB
    Value: !GetAtt BattleHexesLoadBalancer.DNSName
  ApiUrl:
    Description: HTTPS endpoint
    Value: !Sub "https://${ApiDomainName}"
