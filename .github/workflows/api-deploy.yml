name: Deploy API to Dev

on:
  workflow_dispatch:

jobs:
  build-and-push-to-ecr:
    name: Build & Push Docker Image to ECR
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker image to ECR
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: latest
        run: |
          docker build -f battle_hexes_api/Dockerfile -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy-cloudformation:
    name: Deploy CloudFormation Stack
    runs-on: ubuntu-latest
    needs: build-and-push-to-ecr

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy CloudFormation Stack
        env:
          VPC_ID: ${{ secrets.VPC_ID }}
          SUBNET_IDS: ${{ secrets.SUBNET_IDS }} # Space-separated string
          ECR_IMAGE: ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest
        run: |
          aws cloudformation deploy \
            --template-file battle_hexes_api/ecs-backend.yml \
            --stack-name battle-hexes-api-dev \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides \
              "VpcId=$VPC_ID" \
              "SubnetIds=$SUBNET_IDS" \
              "EcrImage=$ECR_IMAGE"
