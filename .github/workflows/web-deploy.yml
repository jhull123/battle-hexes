name: Deploy Web Project

on:
  workflow_dispatch:

permissions:
  id-token: write  # ✅ Required for OIDC
  contents: read   # ✅ Required for `actions/checkout`

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: battle-hexes-web
        run: npm install

      - name: Build
        working-directory: battle-hexes-web
        run: npm run build:dev

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy infrastructure
        env:
          BUCKET_NAME: ${{ secrets.WEB_BUCKET_NAME }}
          ACM_CERT_ARN: ${{ secrets.ACM_CERT_ARN }}
          HOSTED_ZONE_ID: ${{ secrets.HOSTED_ZONE_ID }}
        run: |
          aws cloudformation deploy \
            --stack-name battle-hexes-web \
            --template-file battle-hexes-web/cloudformation-template.yml \
            --parameter-overrides \
              BucketName=$BUCKET_NAME \
              AcmCertificateArn=$ACM_CERT_ARN \
              HostedZoneId=$HOSTED_ZONE_ID \
              WebDomainName=dev.battlehexes.com \
            --no-fail-on-empty-changeset

      - name: Sync build artifacts
        env:
          BUCKET_NAME: ${{ secrets.WEB_BUCKET_NAME }}
        run: |
          # 1) Push all non-HTML assets with long-lived, immutable caching
          aws s3 sync battle-hexes-web/dist s3://$BUCKET_NAME \
            --exclude "*.html" \
            --cache-control "public, max-age=31536000, immutable" \
            --delete
          # 2) Upload HTML entry points with no-cache headers
          for page in index.html battle.html; do
            if [ -f "battle-hexes-web/dist/$page" ]; then
              aws s3 cp "battle-hexes-web/dist/$page" "s3://$BUCKET_NAME/$page" \
                --cache-control "no-cache, max-age=0, must-revalidate" \
                --content-type "text/html; charset=utf-8" \
                --metadata-directive REPLACE
            fi
          done

      - name: Invalidate CloudFront HTML
        env:
          STACK_NAME: battle-hexes-web
        run: |
          DIST_ID=$(aws cloudformation describe-stacks \
            --stack-name "$STACK_NAME" \
            --query "Stacks[0].Outputs[?OutputKey=='CloudFrontDistributionId'].OutputValue" \
            --output text || true)

          if [ -n "$DIST_ID" ] && [ "$DIST_ID" != "None" ]; then
            aws cloudfront create-invalidation \
              --distribution-id "$DIST_ID" \
              --paths "/index.html" "/battle.html"
          else
            echo "No CloudFront distribution id found; skipping invalidation."
          fi

      - name: Show stack outputs
        run: |
          aws cloudformation describe-stacks \
            --stack-name battle-hexes-web \
            --query "Stacks[0].Outputs" \
            --output table
